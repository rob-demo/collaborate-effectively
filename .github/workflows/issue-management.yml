name: Issue management

on:
  issues:
    types: [assigned]
  pull_request:
    types: [opened, reopened]

# map fields with customized labels
env:
  todo: Todo
  assigned: Assigned
  progress: "In Progress"
  done: Done

  PROJECTOWNER: 'sharkmerry7'
  PROJECTNUMBER: 2

permissions:
  issues: write
  repository-projects: write

jobs:
  # todo: create job for pr created and move that to done, otherwise it will only be in the "backlog" column

  issue-assigned:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'assigned' && github.repository == 'sharkmerry7/collaborate-effectively'
    steps:    
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@8e1ba3bf1619726336414f1014e37f17fbadf1db
        with:
          application_id: ${{ vars.GH_APPLICATION_ID }}
          application_private_key: ${{ secrets.GH_APPLICATION_PRIVATE_KEY }}
          
      - name: change-status-in-project
        env:
          GH_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
          STATUSFIELDVALUE: "Todo"
          STATUSFIELDNAME: "Status"
          ISSUE_URL: "${{ github.event.issue.html_url }}"
          ISSUE_NUMBER: "${{ github.event.issue.number }}"
          ISSUE_ID: "${{ github.event.issue.id }}"
        shell: pwsh
        run: |
           $PROJECTOWNER = $env:PROJECTOWNER
           $PROJECTNUMBER = $env:PROJECTNUMBER
           $ISSUENUMBER = $env:ISSUE_NUMBER
           $ISSUEID = $env:ISSUE_ID
           $STATUSFIELDVALUE = $env:STATUSFIELDVALUE
           $STATUSFIELDNAME = $env:STATUSFIELDNAME
           
           echo "PROJECTOWNER = [$PROJECTOWNER] and PROJECTNUMBER = [$PROJECTNUMBER]"           
           $project = $(gh project list --owner "$PROJECTOWNER" --format json | ConvertFrom-Json).projects | Where-Object {$_.number -eq $PROJECTNUMBER}
           if ($null -eq $project) {
             Write-Error "Cannot locate project with owner [$PROJECTOWNER] and number [$PROJECTNUMBER]"
           }

           $issue = $(gh project item-list $PROJECTNUMBER --owner "$PROJECTOWNER" --format json | ConvertFrom-Json).items | Where-Object {$_.content.type -eq "issue" -And $_.content.number -eq $ISSUENUMBER}
           if ($null -eq $issue) {
             Write-Error "Cannot locate issue with number [$ISSUENUMBER] in project number [$PROJECTNUMBER] for owner [$PROJECTOWNER]"
           }
           
           # load the status field for this project
           $statusField = $(gh project field-list $PROJECTNUMBER --owner $PROJECTOWNER --format json | ConvertFrom-Json).fields | Where-Object {$_.name -eq "$STATUSFIELDNAME"}
           if ($statusField.type -eq "ProjectV2SingleSelectField") {
              # find the option with name
              $option = $statusField.options | Where-Object {$_.name -eq "$STATUSFIELDVALUE"}

              # todo: check if the status option is actually forward, to prevent us from going backward

              Write-Host "status fieldid: [$($statusField.id)] and ISSUE_ID = [$ISSUEID] and Issue.Id = [$($issue.id)]"
              gh project item-edit --project-id "$($project.id)" --id "$($issue.id)" --field-id "$($statusField.id)" --single-select-option-id "$($option.id)"
           }

           # todo: add support for other field types!

  pr-opened2:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'opened' && github.repository == 'sharkmerry7/collaborate-effectively'
    steps:    
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@8e1ba3bf1619726336414f1014e37f17fbadf1db
        with:
          application_id: ${{ vars.GH_APPLICATION_ID }}
          application_private_key: ${{ secrets.GH_APPLICATION_PRIVATE_KEY }}
          
      - name: change-status-in-project
        env:
          GH_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
          STATUSFIELDVALUE: "${{ env.progress }}"
          STATUSFIELDNAME: "Status"
          ISSUE_URL: "${{ github.event.issue.html_url }}"
          ISSUE_NUMBER: "${{ github.event.number }}"
          ISSUE_ID: "${{ github.event.id }}"
        shell: pwsh
        run: |
           $PROJECTOWNER = $env:PROJECTOWNER
           $PROJECTNUMBER = $env:PROJECTNUMBER
           $ISSUENUMBER = $env:ISSUE_NUMBER
           $ISSUEID = $env:ISSUE_ID
           $STATUSFIELDVALUE = $env:STATUSFIELDVALUE
           $STATUSFIELDNAME = $env:STATUSFIELDNAME
           
           echo "PROJECTOWNER = [$PROJECTOWNER] and PROJECTNUMBER = [$PROJECTNUMBER]"           
           $project = $(gh project list --owner "$PROJECTOWNER" --format json | ConvertFrom-Json).projects | Where-Object {$_.number -eq $PROJECTNUMBER}
           if ($null -eq $project) {
             Write-Error "Cannot locate project with owner [$PROJECTOWNER] and number [$PROJECTNUMBER]"
           }

           $issue = $(gh project item-list $PROJECTNUMBER --owner "$PROJECTOWNER" --format json | ConvertFrom-Json).items | Where-Object {$_.content.type -eq "issue" -And $_.content.number -eq $ISSUENUMBER}
           if ($null -eq $issue) {
             Write-Error "Cannot locate issue with number [$ISSUENUMBER] in project number [$PROJECTNUMBER] for owner [$PROJECTOWNER]"
           }
           
           # load the status field for this project
           $statusField = $(gh project field-list $PROJECTNUMBER --owner $PROJECTOWNER --format json | ConvertFrom-Json).fields | Where-Object {$_.name -eq "$STATUSFIELDNAME"}
           if ($statusField.type -eq "ProjectV2SingleSelectField") {
              # find the option with name
              $option = $statusField.options | Where-Object {$_.name -eq "$STATUSFIELDVALUE"}

              # todo: check if the status option is actually forward, to prevent us from going backward

              Write-Host "status fieldid: [$($statusField.id)] and ISSUE_ID = [$ISSUEID] and Issue.Id = [$($issue.id)]"
              gh project item-edit --project-id "$($project.id)" --id "$($issue.id)" --field-id "$($statusField.id)" --single-select-option-id "$($option.id)"
           }

           # todo: add support for other field types!

  test:
    runs-on: ubuntu-latest
    env:
      info: ${{ toJSON(github.event) }}
    steps:
      - run: |
           echo "Event: ${{ github.event_name }}"
           echo "Info: $info"

  pr-opened:
    runs-on: ubuntu-latest
    if: (github.event_name == 'pull_request' && github.repository == 'sharkmerry7/collaborate-effectively') && (github.event.action == 'opened' || github.event.action == 'reopened')
    steps:    
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@8e1ba3bf1619726336414f1014e37f17fbadf1db
        with:
          application_id: ${{ vars.GH_APPLICATION_ID }}
          application_private_key: ${{ secrets.GH_APPLICATION_PRIVATE_KEY }}
          
      - name: Change linked issues and PR
        env:
          GH_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
          STATUSFIELDVALUE: "In progress"
          STATUSFIELDNAME: "Status"
          PULLREQUEST: "${{toJSON(github.event.pull_request)}}"
        shell: pwsh
        run: |
           $PROJECTOWNER = $env:PROJECTOWNER
           $PROJECTNUMBER = $env:PROJECTNUMBER
           $STATUSFIELDVALUE = $env:STATUSFIELDVALUE
           $STATUSFIELDNAME = $env:STATUSFIELDNAME
           $PULLREQUEST = $env:PULLREQUEST | ConvertFrom-Json           

           Write-Host "PROJECTOWNER = [$PROJECTOWNER] and PROJECTNUMBER = [$PROJECTNUMBER]"           
           $project = $(gh project list --owner "$PROJECTOWNER" --format json | ConvertFrom-Json).projects | Where-Object {$_.number -eq $PROJECTNUMBER}
           if ($null -eq $project) {
             Write-Error "Cannot locate project with owner [$PROJECTOWNER] and number [$PROJECTNUMBER]"
           }

           # load the status field for this project
           $statusField = $(gh project field-list $PROJECTNUMBER --owner $PROJECTOWNER --format json | ConvertFrom-Json).fields | Where-Object {$_.name -eq "$STATUSFIELDNAME"}
           if ($null -eq $statusField) {
             Write-Error "Cannot find status field with name [$STATUSFIELDNAME] for project [PROJECTNUMBER] in owner [$PROJECTOWNER]"
           }

           # also move the PR itself to the "${{ env.progress }}" column
           $issue = $(gh project item-list $PROJECTNUMBER --owner "$PROJECTOWNER" --format json | ConvertFrom-Json).items | Where-Object {$_.content.type -eq "PullRequest" -And $_.content.number -eq $PULLREQUEST.number}
           $option = $statusField.options | Where-Object {$_.name -eq "${{ env.progress }}"}
           gh project item-edit --project-id "$($project.id)" --id "$($PULLREQUEST.node_id)" --field-id "$($statusField.id)" --single-select-option-id "$($option.id)"
           Write-Host "Moved PR's field [$($statusField.name)] to value [${{ env.progress }}] with values PROJECTNUMBER [$PROJECTNUMBER], PROJECTOWNER [$PROJECTOWNER], PULLREQUEST.number [$($PULLREQUEST.number)]"

           # load all linked issues from PR
           $prUrl = $PULLREQUEST._links.html.href
           Write-Host "Searching for linked issues with url [$prUrl]"
           $query = 'query {' + [environment]::NewLine +
            'resource(url: "' + $prUrl + '") {' + [environment]::NewLine +
              '... on PullRequest {' + [environment]::NewLine +
              'id' + [environment]::NewLine +
              'closingIssuesReferences (first: 50) {' + [environment]::NewLine +
                'edges {' + [environment]::NewLine +
                  'node {' + [environment]::NewLine +
                    'id' + [environment]::NewLine +
                    'body' + [environment]::NewLine +
                    'number' + [environment]::NewLine +
                    'title' + [environment]::NewLine +
                  '}' + [environment]::NewLine +
                '}' + [environment]::NewLine +
              '}' + [environment]::NewLine +
           '}}}' 

           $query = 'query {' + [environment]::NewLine +
            'resource(url: "https://github.com/sharkmerry7/collaborate-effectively/pull/4") {' + [environment]::NewLine +
              '... on PullRequest {' + [environment]::NewLine +
              'id' + [environment]::NewLine +
              'closingIssuesReferences (first: 50) {' + [environment]::NewLine +
                'edges {' + [environment]::NewLine +
                  'node {' + [environment]::NewLine +
                    'id' + [environment]::NewLine +
                    'body' + [environment]::NewLine +
                    'number' + [environment]::NewLine +
                    'title' + [environment]::NewLine +
                  '}' + [environment]::NewLine +
                '}' + [environment]::NewLine +
              '}' + [environment]::NewLine +
           '}}}' 

           Write-Host "query value:"
           Write-Host $query
           $result = (gh api graphql -f query=$query)

           Write-Host 'GraphQL result: ' $result

           $result = $result | ConvertFrom-JSON -Depth 10

           if ($null -eq $result.data.resource.closingIssuesReferences.edges) {
             Write-Error "Error loading linked issues from this PR: [$($result | ConvertTo-Json -Depth 10)]"
           }
            
           function updateIssueInProject {
             param (
               $PROJECTNUMBER,
               $PROJECTOWNER,
               $ISSUENUMBER,
               $statusField
             )

            Write-Host "Changing field [$($statusField.name)] to value [$STATUSFIELDVALUE]  with values PROJECTNUMBER [$PROJECTNUMBER], PROJECTOWNER [$PROJECTOWNER], ISSUENUMBER [$ISSUENUMBER]"

            $issue = $(gh project item-list $PROJECTNUMBER --owner "$PROJECTOWNER" --format json | ConvertFrom-Json).items | Where-Object {$_.content.type -eq "Issue" -And $_.content.number -eq $ISSUENUMBER}
            if ($null -eq $issue) {
              Write-Error "Cannot locate issue with number [$ISSUENUMBER] in project number [$PROJECTNUMBER] for owner [$PROJECTOWNER]"
            }
            
            if ($statusField.type -eq "ProjectV2SingleSelectField") {
                # find the option with name
                $option = $statusField.options | Where-Object {$_.name -eq "$STATUSFIELDVALUE"}

                # todo: check if the status option is actually forward, to prevent us from going backward

                Write-Debug "status fieldid: [$($statusField.id)] and ISSUE_ID = [$ISSUEID] and Issue.Id = [$($issue.id)]"
                gh project item-edit --project-id "$($project.id)" --id "$($issue.id)" --field-id "$($statusField.id)" --single-select-option-id "$($option.id)"
            }

            # todo: add support for other field types
           }

           foreach ($issue in $result.data.resource.closingIssuesReferences.edges) {
             Write-Debug "Running foreach with this issue: $($issue | ConvertTo-Json)"
             updateIssueInProject -PROJECTNUMBER $PROJECTNUMBER -PROJECTOWNER $PROJECTOWNER -statusField $statusField -ISSUENUMBER "$($issue.node.number)"
           }
           
